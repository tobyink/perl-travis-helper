#!/bin/bash
set -e

BUILD_DIR=$1
export PERL5LIB=
PATH="$(dirname $(which $($MODERN_PERL -e'print $^X'))):$PATH"
eval "$($HELPER_ROOT/local-lib)"

function auto-install {
  local command="$1"
  local run_log="$(mktemp -t run-log-XXXXXX)"
  local deps
  local last_deps
  local status=0
  until $command >$run_log 2>&1; do
    status=$?
    deps="$(perl -lne'if (/^Can'\''t locate (\S+)\.pm in \@INC/) { my $m = $1; $m =~ s{/}{::}g; print $m;} elsif (/^(\S+) version (\S+) required--this is only version /) { print "$1~$2" }' "$run_log")"
    [ -z "$deps" ]              && break
    [ "$deps" == "$last_deps" ] && break
    status=0
    $HELPER_ROOT/cpan-install $deps
    last_deps="$deps"
  done
  cat "$run_log"
  rm -f "$run_log"
  return $status
}

if [ -e 'dist.ini' ] && [ ! -z $(grep Dist::Inkt::Profile::TOBYINK dist.ini) ]; then
  echo "Building with Dist::Inkt::Profile::TOBYINK"
  $HELPER_ROOT/cpan-install Dist::Inkt::Profile::TOBYINK
  PERL_DIST_INKT_NOSIGNATURE=1
  PERL_DIST_INKT_NOTARBALL=1
  PERL_DIST_INKT_KEEPDIR=1
  distinkt-dist
  DIST_DIR=$(perl -ne 'print grep -d, glob("$1*") if /name\s*=\s*.([\w:]+)./' dist.ini)
  mv "$DIST_DIR" "$BUILD_DIR"
elif [ -e 'dist.ini' ]; then
  echo "Building with Dist::Zilla"
  $HELPER_ROOT/cpan-install Dist::Zilla
  AUTHOR_DEPS="$(dzil authordeps --missing | grep -v '^inc::')"
  $HELPER_ROOT/cpan-install $AUTHOR_DEPS
  dzil build --in="$BUILD_DIR"
elif [ -e 'Makefile.PL' ]; then
  if grep -q 'Module::Install' 'Makefile.PL'; then
    echo "Building with Makefile.PL (Module::Install)"
    AUTHOR_DEPS='Module::Install'
    while read command module; do
      grep -q -E "$command" 'Makefile.PL' && AUTHOR_DEPS="$AUTHOR_DEPS $module"
    done < $HELPER_ROOT/module-install-commands.txt
    $HELPER_ROOT/cpan-install $AUTHOR_DEPS
  else
    echo "Building with Makefile.PL (ExtUtils::MakeMaker)"
  fi
  auto-install "perl Makefile.PL DISTVNAME=$BUILD_DIR"
  make manifest
  make distdir
elif [ -e 'Build.PL' ]; then
  echo "Building with Build.PL (Module::Build)"
  $HELPER_ROOT/cpan-install Module::Build
  $MODERN_PERL Build.PL
  ./Build distdir
  DIST_DIR=$(perl -e'my $d = (do "_build/build_params")->[2]; print "$d->{dist_name}-$d->{dist_version}\n"')
  mv "$DIST_DIR" "$BUILD_DIR"
else
  echo "Don't know how to build this dist!" >&2
  exit 1
fi
